services:
  angular:
    container_name: angular
    build:
      context: ./frontend/
      dockerfile: Dockerfile.prod
    ports:
      - '80:80'
    depends_on:
      - flask

  flask:
    container_name: flask
    build:
      context: ./backend/
    volumes:
      - ./backend:/app
    ports:
      - '5000:5000'
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    env_file:
      - .env
    command: gunicorn --bind 0.0.0.0:5000 app:app
    depends_on:
      - postgres
    networks:
      - appnet

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    networks:
      - appnet

volumes:
  data:
    name: postgres-volume

networks:
  appnet: